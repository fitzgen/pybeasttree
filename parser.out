Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> tree
Rule 1     tree -> node metadata COLON NUMBER
Rule 2     tree -> node metadata
Rule 3     node -> NUMBER
Rule 4     node -> LPAREN tree_list RPAREN
Rule 5     tree_list -> tree
Rule 6     tree_list -> tree COMMA tree_list
Rule 7     metadata -> ATTR

Terminals, with rules where they appear

ATTR                 : 7
COLON                : 1
COMMA                : 6
LBRACKET             : 
LPAREN               : 4
NUMBER               : 1 3
RBRACKET             : 
RPAREN               : 4
error                : 

Nonterminals, with rules where they appear

metadata             : 1 2
node                 : 1 2
tree                 : 5 6 0
tree_list            : 4 6

Parsing method: LALR

state 0

    (0) S' -> . tree
    (1) tree -> . node metadata COLON NUMBER
    (2) tree -> . node metadata
    (3) node -> . NUMBER
    (4) node -> . LPAREN tree_list RPAREN

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4

    node                           shift and go to state 1
    tree                           shift and go to state 2

state 1

    (1) tree -> node . metadata COLON NUMBER
    (2) tree -> node . metadata
    (7) metadata -> . ATTR

    ATTR            shift and go to state 5

    metadata                       shift and go to state 6

state 2

    (0) S' -> tree .



state 3

    (3) node -> NUMBER .

    ATTR            reduce using rule 3 (node -> NUMBER .)


state 4

    (4) node -> LPAREN . tree_list RPAREN
    (5) tree_list -> . tree
    (6) tree_list -> . tree COMMA tree_list
    (1) tree -> . node metadata COLON NUMBER
    (2) tree -> . node metadata
    (3) node -> . NUMBER
    (4) node -> . LPAREN tree_list RPAREN

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4

    node                           shift and go to state 1
    tree_list                      shift and go to state 7
    tree                           shift and go to state 8

state 5

    (7) metadata -> ATTR .

    COLON           reduce using rule 7 (metadata -> ATTR .)
    $end            reduce using rule 7 (metadata -> ATTR .)
    COMMA           reduce using rule 7 (metadata -> ATTR .)
    RPAREN          reduce using rule 7 (metadata -> ATTR .)


state 6

    (1) tree -> node metadata . COLON NUMBER
    (2) tree -> node metadata .

    COLON           shift and go to state 9
    $end            reduce using rule 2 (tree -> node metadata .)
    COMMA           reduce using rule 2 (tree -> node metadata .)
    RPAREN          reduce using rule 2 (tree -> node metadata .)


state 7

    (4) node -> LPAREN tree_list . RPAREN

    RPAREN          shift and go to state 10


state 8

    (5) tree_list -> tree .
    (6) tree_list -> tree . COMMA tree_list

    RPAREN          reduce using rule 5 (tree_list -> tree .)
    COMMA           shift and go to state 11


state 9

    (1) tree -> node metadata COLON . NUMBER

    NUMBER          shift and go to state 12


state 10

    (4) node -> LPAREN tree_list RPAREN .

    ATTR            reduce using rule 4 (node -> LPAREN tree_list RPAREN .)


state 11

    (6) tree_list -> tree COMMA . tree_list
    (5) tree_list -> . tree
    (6) tree_list -> . tree COMMA tree_list
    (1) tree -> . node metadata COLON NUMBER
    (2) tree -> . node metadata
    (3) node -> . NUMBER
    (4) node -> . LPAREN tree_list RPAREN

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4

    node                           shift and go to state 1
    tree_list                      shift and go to state 13
    tree                           shift and go to state 8

state 12

    (1) tree -> node metadata COLON NUMBER .

    $end            reduce using rule 1 (tree -> node metadata COLON NUMBER .)
    COMMA           reduce using rule 1 (tree -> node metadata COLON NUMBER .)
    RPAREN          reduce using rule 1 (tree -> node metadata COLON NUMBER .)


state 13

    (6) tree_list -> tree COMMA tree_list .

    RPAREN          reduce using rule 6 (tree_list -> tree COMMA tree_list .)

